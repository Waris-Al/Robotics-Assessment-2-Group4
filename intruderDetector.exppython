{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain = Brain()\n\n# Robot configuration code\nbrain_inertial = Inertial()\nmotionSensor = Distance(Ports.PORT1)\nmotor_6 = Motor(Ports.PORT6, True)\ncaptureImageSignal = DigitalOut(brain.three_wire_port.a)\nstopAlarmButton = DigitalIn(brain.three_wire_port.b)\n\n\n# Wait for sensor(s) to fully initialize\nwait(100, MSEC)\n\n# generating and setting random seed\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    xaxis = brain_inertial.acceleration(XAXIS) * 1000\n    yaxis = brain_inertial.acceleration(YAXIS) * 1000\n    zaxis = brain_inertial.acceleration(ZAXIS) * 1000\n    systemTime = brain.timer.system() * 100\n    urandom.seed(int(xaxis + yaxis + zaxis + systemTime)) \n\n# Initialize random seed \ninitializeRandomSeed()\n\n#endregion VEXcode Generated Robot Configuration\n\nmotor_6.set_velocity(3, PERCENT)\n\ndef intruderDetector():\n    noIntruder = True\n    intruderFound = False\n    \n    while noIntruder:\n        wait(0.5, SECONDS)\n        motor_6.spin_for(FORWARD, 22, DEGREES)\n        wait(0.5, SECONDS)\n        motor_6.stop()\n\n        '''need to decide a value for this'''\n        if motionSensor.object_distance(MM) < 200: \n            captureImageSignal.set(True) #Sends a signal to the raspberry pi, which will then run the image capture script\n            noIntruder = False #This will cause the loop to break, as an intruder has been deteted\n        else:\n            captureImageSignal.set(False) #This ensures that the script isn't run accidentally \n        \n\n\n    #If the above loop breaks, the sensor has found someone and will now play an alarm\n    brain.screen.print(\"Intruder\")\n    brain.screen.next_row()\n    brain.screen.print(\"Detected\")\n    while stopAlarmButton.value() == 1:\n        brain.play_sound(SoundType.SIREN2)\n        wait(1, SECONDS)\n\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1,1)\n    #Above code has to be two lines because of how clear_screen works\n\n    brain.screen.print(\"Alarm\")\n    brain.screen.next_row()\n    brain.screen.print(\"Deactivated\")\n    pass\n\nintruderDetector()\n","textLanguage":"python","robotConfig":[{"port":[1],"name":"motionSensor","customName":true,"deviceType":"Distance","deviceClass":"distance","setting":{},"triportSourcePort":22},{"port":[6],"name":"motor_6","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[1],"name":"captureImageSignal","customName":true,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{},"triportSourcePort":22},{"port":[2],"name":"stopAlarmButton","customName":true,"deviceType":"DigitalIn","deviceClass":"digital_in","setting":{},"triportSourcePort":22}],"slot":0,"platform":"EXP","sdkVersion":"20240802.15.00.00","appVersion":"4.0.8","fileFormat":"2.0.0","targetBrainGen":"First","v5SoundsEnabled":false}